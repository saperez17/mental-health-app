{"remainingRequest":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/babel-loader/lib/index.js!/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/eslint-loader/index.js??ref--12-0!/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/src/services/post.js","dependencies":[{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/src/services/post.js","mtime":1634281115574},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgZ2V0RnJvbUxvY2FsIH0gZnJvbSAiQC91dGlscy9sb2NhbFN0b3JhZ2UiOwpjb25zdCBCQVNFX1VSTCA9IHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9VUkw7Cgpjb25zdCBnZXRQb3N0cyA9IGFzeW5jICgpID0+IHsKICB0cnkgewogICAgY29uc3QgcmVzID0gYXdhaXQgYXhpb3MuZ2V0KGAke0JBU0VfVVJMfS9hcGkvcG9zdHNgKTsKICAgIHJldHVybiByZXMuZGF0YTsKICB9IGNhdGNoIChlKSB7CiAgICBjb25zb2xlLmxvZyhlKTsKICB9Cn07Cgpjb25zdCBjcmVhdGVQb3N0ID0gYXN5bmMgbmV3UG9zdCA9PiB7CiAgdHJ5IHsKICAgIGNvbnN0IHVzZXIgPSBnZXRGcm9tTG9jYWwoJ3VzZXInKTsKICAgIGxldCBoZWFkZXJzID0gewogICAgICAiQXV0aG9yaXphdGlvbiI6IGBCZWFyZXIgJHt1c2VyLnRva2VufWAsCiAgICAgICJjb250ZW50LXR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIKICAgIH07CiAgICBjb25zdCByZXMgPSBhd2FpdCBheGlvcy5wb3N0KGAke0JBU0VfVVJMfS9hcGkvcG9zdHNgLCBuZXdQb3N0LCB7CiAgICAgIGhlYWRlcnM6IHsgLi4uaGVhZGVycwogICAgICB9CiAgICB9KTsKICAgIHJldHVybiByZXM7CiAgfSBjYXRjaCAoZSkgewogICAgY29uc29sZS5sb2coZSk7CiAgfQp9OwoKY29uc3QgdXBkYXRlUG9zdCA9IGFzeW5jICh7CiAgbmV3UG9zdERhdGEsCiAgcG9zdElkCn0pID0+IHsKICB0cnkgewogICAgY29uc3QgdXNlciA9IGdldEZyb21Mb2NhbCgndXNlcicpOwogICAgY29uc29sZS5sb2coJ3Bvc3RJZCcsIHBvc3RJZCk7CiAgICBsZXQgaGVhZGVycyA9IHsKICAgICAgIkF1dGhvcml6YXRpb24iOiBgQmVhcmVyICR7dXNlci50b2tlbn1gLAogICAgICAiY29udGVudC10eXBlIjogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9OwogICAgY29uc3QgcmVzID0gYXdhaXQgYXhpb3MucHV0KGAke0JBU0VfVVJMfS9hcGkvcG9zdHMvJHtwb3N0SWR9YCwgeyAuLi5uZXdQb3N0RGF0YSwKICAgICAgdXNlcklkOiB1c2VyLmlkCiAgICB9LCB7CiAgICAgIGhlYWRlcnM6IHsgLi4uaGVhZGVycwogICAgICB9CiAgICB9KTsKICAgIHJldHVybiByZXM7CiAgfSBjYXRjaCAoZSkgewogICAgY29uc29sZS5sb2coZSk7CiAgfQp9OwoKZXhwb3J0IHsgZ2V0UG9zdHMsIGNyZWF0ZVBvc3QsIHVwZGF0ZVBvc3QgfTs="},{"version":3,"sources":["/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/src/services/post.js"],"names":["axios","getFromLocal","BASE_URL","process","env","VUE_APP_BASE_URL","getPosts","res","get","data","e","console","log","createPost","newPost","user","headers","token","post","updatePost","newPostData","postId","put","userId","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,gBAA7B;;AAEA,MAAMC,QAAQ,GAAG,YAAY;AAC3B,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,GAAEN,QAAS,YAAtB,CAAlB;AACA,WAAOK,GAAG,CAACE,IAAX;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,CAPD;;AAQA,MAAMG,UAAU,GAAG,MAAOC,OAAP,IAAmB;AACpC,MAAI;AACF,UAAMC,IAAI,GAAGd,YAAY,CAAC,MAAD,CAAzB;AACA,QAAIe,OAAO,GAAG;AACN,uBAAkB,UAASD,IAAI,CAACE,KAAM,EADhC;AAEN,sBAAgB;AAFV,KAAd;AAIA,UAAMV,GAAG,GAAG,MAAMP,KAAK,CAACkB,IAAN,CAAY,GAAEhB,QAAS,YAAvB,EAAqCY,OAArC,EAA8C;AAAEE,MAAAA,OAAO,EAAE,EAAE,GAAGA;AAAL;AAAX,KAA9C,CAAlB;AACA,WAAOT,GAAP;AACD,GARD,CAQE,OAAOG,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,CAZD;;AAaA,MAAMS,UAAU,GAAG,OAAO;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAP,KAAiC;AAClD,MAAI;AACF,UAAMN,IAAI,GAAGd,YAAY,CAAC,MAAD,CAAzB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBS,MAArB;AACA,QAAIL,OAAO,GAAG;AACN,uBAAkB,UAASD,IAAI,CAACE,KAAM,EADhC;AAEN,sBAAgB;AAFV,KAAd;AAIA,UAAMV,GAAG,GAAG,MAAMP,KAAK,CAACsB,GAAN,CAAW,GAAEpB,QAAS,cAAamB,MAAO,EAA1C,EAA8C,EAAE,GAAGD,WAAL;AAAkBG,MAAAA,MAAM,EAACR,IAAI,CAACS;AAA9B,KAA9C,EAAkF;AAAER,MAAAA,OAAO,EAAE,EAAE,GAAGA;AAAL;AAAX,KAAlF,CAAlB;AACA,WAAOT,GAAP;AACD,GATD,CASE,OAAOG,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,CAbD;;AAeA,SACEJ,QADF,EAEEO,UAFF,EAGEM,UAHF","sourcesContent":["import axios from 'axios'\nimport { getFromLocal } from \"@/utils/localStorage\";\n\nconst BASE_URL = process.env.VUE_APP_BASE_URL;\n\nconst getPosts = async () => {\n  try {\n    const res = await axios.get(`${BASE_URL}/api/posts`)\n    return res.data\n  } catch (e) {\n    console.log(e)\n  }\n}\nconst createPost = async (newPost) => {\n  try {\n    const user = getFromLocal('user');\n    let headers = {\n            \"Authorization\": `Bearer ${user.token}`,\n            \"content-type\": \"application/json\"\n    };\n    const res = await axios.post(`${BASE_URL}/api/posts`,  newPost, { headers: { ...headers } })\n    return res\n  } catch (e) {\n    console.log(e)\n  }\n}\nconst updatePost = async ({newPostData, postId}) => {\n  try {\n    const user = getFromLocal('user');\n    console.log('postId',postId);\n    let headers = {\n            \"Authorization\": `Bearer ${user.token}`,\n            \"content-type\": \"application/json\"\n    };\n    const res = await axios.put(`${BASE_URL}/api/posts/${postId}`,  { ...newPostData, userId:user.id }, { headers: { ...headers } })\n    return res\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nexport {\n  getPosts,\n  createPost,\n  updatePost\n}\n"]}]}