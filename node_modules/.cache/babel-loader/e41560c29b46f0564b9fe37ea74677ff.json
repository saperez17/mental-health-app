{"remainingRequest":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/babel-loader/lib/index.js!/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/eslint-loader/index.js??ref--12-0!/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/src/mocks/handlers.js","dependencies":[{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/src/mocks/handlers.js","mtime":1633749555639},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzdCB9IGZyb20gIm1zdyI7CmltcG9ydCB7IGludGVyZXN0QnVpbGRlciB9IGZyb20gIi4uL3N0dWJzL2J1aWxkZXJzIjsgLy8gY29uc3QgYmFzZVVybCA9IHByb2Nlc3MuZW52LlJFQUNUX0FQUF9CQVNFX1VSTDsKCmV4cG9ydCBjb25zdCBoYW5kbGVycyA9IFtyZXN0LnBvc3QobmV3IFJlZ0V4cCgiL2xvZ2luIiksIChyZXEsIHJlcywgY3R4KSA9PiB7CiAgY29uc29sZS5sb2coJ2hpdGluZyBsb2dpbicpOwogIHJldHVybiByZXMoY3R4Lmpzb24oewogICAgaWQ6ICJmNzllODJlOC1jMzRhLTRkYzctYTQ5ZS05ZmFkYzA5NzlmZGEiLAogICAgdXNlcm5hbWU6ICJ1c2VybmFtZSIsCiAgICBmaXJzdE5hbWU6ICJKb2huIiwKICAgIGxhc3ROYW1lOiAiTWF2ZXJpY2siCiAgfSkpOwp9KSwgcmVzdC5wb3N0KG5ldyBSZWdFeHAoImFwaS9hdXRoL3NpZ251cF91c2VyX2RhdGEiKSwgKHJlcSwgcmVzLCBjdHgpID0+IHsKICByZXR1cm4gcmVzKGN0eC5qc29uKHsKICAgIG1lc3NhZ2U6ICJVc2VyIGRhdGEgYWRkZWQiCiAgfSkpOwp9KV07"},{"version":3,"sources":["/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/src/mocks/handlers.js"],"names":["rest","interestBuilder","handlers","post","RegExp","req","res","ctx","console","log","json","id","username","firstName","lastName","message"],"mappings":"AAAA,SAASA,IAAT,QAAqB,KAArB;AACA,SAASC,eAAT,QAAgC,mBAAhC,C,CACA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CACtBF,IAAI,CAACG,IAAL,CAAU,IAAIC,MAAJ,CAAW,QAAX,CAAV,EAAgC,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,KAAmB;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACI,SAAOH,GAAG,CACRC,GAAG,CAACG,IAAJ,CAAS;AACPC,IAAAA,EAAE,EAAE,sCADG;AAEPC,IAAAA,QAAQ,EAAC,UAFF;AAGPC,IAAAA,SAAS,EAAE,MAHJ;AAIPC,IAAAA,QAAQ,EAAE;AAJH,GAAT,CADQ,CAAV;AAQD,CAVD,CADsB,EAatBd,IAAI,CAACG,IAAL,CAAU,IAAIC,MAAJ,CAAW,2BAAX,CAAV,EAAmD,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,KAAmB;AACpE,SAAOD,GAAG,CAACC,GAAG,CAACG,IAAJ,CAAS;AAAEK,IAAAA,OAAO,EAAE;AAAX,GAAT,CAAD,CAAV;AACD,CAFD,CAbsB,CAAjB","sourcesContent":["import { rest } from \"msw\";\nimport { interestBuilder } from \"../stubs/builders\";\n// const baseUrl = process.env.REACT_APP_BASE_URL;\n\nexport const handlers = [\n  rest.post(new RegExp(\"/login\"), (req, res, ctx) => {\nconsole.log('hiting login');\n    return res(\n      ctx.json({\n        id: \"f79e82e8-c34a-4dc7-a49e-9fadc0979fda\",\n        username:\"username\",\n        firstName: \"John\",\n        lastName: \"Maverick\",\n      })\n    );\n  }),\n\n  rest.post(new RegExp(\"api/auth/signup_user_data\"), (req, res, ctx) => {\n    return res(ctx.json({ message: \"User data added\" }));\n  }),\n];\n"]}]}