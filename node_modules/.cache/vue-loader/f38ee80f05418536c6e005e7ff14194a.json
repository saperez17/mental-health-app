{"remainingRequest":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/src/components/ContentFeed/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/src/components/ContentFeed/index.vue","mtime":1633763503634},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQb3N0SW5wdXQgZnJvbSAnQC9jb21wb25lbnRzL0NvbnRlbnRGZWVkL2NvbXBvbmVudHMvUG9zdElucHV0JwppbXBvcnQgUG9zdCBmcm9tICdAL2NvbXBvbmVudHMvQ29udGVudEZlZWQvY29tcG9uZW50cy9Qb3N0JwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZScKaW1wb3J0IHsgZ2V0UG9zdHMgfSBmcm9tICdAL3NlcnZpY2VzL3Bvc3QnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ29udGVudEZlZWQnLAogIGNvbXBvbmVudHM6IHsKICAgIFBvc3RJbnB1dCwKICAgIFBvc3QKICB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgcG9zdHM6IFtdLAogICAgICBzaGFyZWRTdGF0ZTogc3RvcmUuc3RhdGUucG9zdHMKICAgIH0KICB9LAogIGNyZWF0ZWQgKCkgewogICAgY29uc29sZS5sb2coJ3N0b3JlIHN0YXRlIGNvbnRlbnQgZmVlZCBjbXB0JywgdGhpcy5zaGFyZWRTdGF0ZSk7CiAgICBnZXRQb3N0cygpCiAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy5wb3N0cyA9IHJlcwogICAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKCiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"index.vue","sourceRoot":"src/components/ContentFeed","sourcesContent":["<template>\n  <b-col>\n    <div style=\"container-wrapper\">\n     <PostInput/>\n     <div>\n       <div class=\"d-flex justify-content-center\"><h3>Latest Posts</h3></div>\n       <Post v-for=\"post in posts\" v-bind:key=\"post.id\" :data=\"post\"/>\n     </div>\n    </div>\n  </b-col>\n</template>\n\n<script>\nimport PostInput from '@/components/ContentFeed/components/PostInput'\nimport Post from '@/components/ContentFeed/components/Post'\nimport store from '@/store'\nimport { getPosts } from '@/services/post'\nexport default {\n  name: 'ContentFeed',\n  components: {\n    PostInput,\n    Post\n  },\n  data () {\n    return {\n      posts: [],\n      sharedState: store.state.posts\n    }\n  },\n  created () {\n    console.log('store state content feed cmpt', this.sharedState);\n    getPosts()\n      .then(res => {\n        this.posts = res\n      });\n  },\n  methods: {\n\n  }\n}\n</script>\n\n<style scoped>\n.container-wrapper {\n  display: flex;\n  flex-direction: column;\n}\n</style>\n"]}]}