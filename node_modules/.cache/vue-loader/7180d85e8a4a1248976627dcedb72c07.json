{"remainingRequest":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/src/components/ContentFeed/components/Post.vue?vue&type=template&id=6a1b1541&scoped=true&","dependencies":[{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/src/components/ContentFeed/components/Post.vue","mtime":1634286874614},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}