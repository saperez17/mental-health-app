{"remainingRequest":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/src/components/ContentFeed/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/src/components/ContentFeed/index.vue","mtime":1634285528442},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usuario/Desktop/SoftwareDEV/MisionTIC/mental-health-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQb3N0SW5wdXQgZnJvbSAiQC9jb21wb25lbnRzL0NvbnRlbnRGZWVkL2NvbXBvbmVudHMvUG9zdElucHV0IjsKaW1wb3J0IFBvc3QgZnJvbSAiQC9jb21wb25lbnRzL0NvbnRlbnRGZWVkL2NvbXBvbmVudHMvUG9zdCI7CmltcG9ydCBzdG9yZSBmcm9tICJAL3N0b3JlIjsKaW1wb3J0IHsgZ2V0UG9zdHMgfSBmcm9tICJAL3NlcnZpY2VzL3Bvc3QiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkNvbnRlbnRGZWVkIiwKICBjb21wb25lbnRzOiB7CiAgICBQb3N0SW5wdXQsCiAgICBQb3N0LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG15U1ZHOiByZXF1aXJlKCJAL2Fzc2V0cy91bmRyYXdfTG9naW5fcmVfNHZ1Mi5zdmciKSwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgcG9zdHMoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5wb3N0czsKICAgIH0sCiAgICB1c2VySWQoKSB7CiAgICAgIGNvbnN0IHVzZXJJZCA9IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXI7CiAgICAgIHJldHVybiB1c2VySWQ7CiAgICB9LAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIC8vIGNvbnNvbGUubG9nKCdwb3N0cyBkYXRhJywgdGhpcy5wb3N0cyk7CiAgICBnZXRQb3N0cygpLnRoZW4oKHJlcykgPT4gewogICAgICBjb25zb2xlLmxvZygicmV0cmlldmVkIHBvc3RzIiwgcmVzKTsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCJzZXRQb3N0c0luaXRpYWxTdGF0ZSIsIHJlcyk7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHt9LAp9Owo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/ContentFeed","sourcesContent":["<template>\n  <b-col>\n    <div style=\"container-wrapper\">\n      <PostInput />\n      <div>\n        <div class=\"d-flex justify-content-center\"><h3>Latest Posts</h3></div>\n        <div v-if=\"posts.length === 0\">No posts yet</div>\n        <Post v-else v-for=\"post in posts\" v-bind:key=\"post.id\" :data=\"post\" />\n        <b-pagination\n          v-model=\"currentPage\"\n          :total-rows=\"rows\"\n          :per-page=\"perPage\"\n          aria-controls=\"my-table\"\n        ></b-pagination>\n      </div>\n    </div>\n  </b-col>\n</template>\n\n<script>\nimport PostInput from \"@/components/ContentFeed/components/PostInput\";\nimport Post from \"@/components/ContentFeed/components/Post\";\nimport store from \"@/store\";\nimport { getPosts } from \"@/services/post\";\nexport default {\n  name: \"ContentFeed\",\n  components: {\n    PostInput,\n    Post,\n  },\n  data() {\n    return {\n      mySVG: require(\"@/assets/undraw_Login_re_4vu2.svg\"),\n    };\n  },\n  computed: {\n    posts() {\n      return this.$store.state.posts;\n    },\n    userId() {\n      const userId = this.$store.state.user;\n      return userId;\n    },\n  },\n  created() {\n    // console.log('posts data', this.posts);\n    getPosts().then((res) => {\n      console.log(\"retrieved posts\", res);\n      this.$store.commit(\"setPostsInitialState\", res);\n    });\n  },\n  methods: {},\n};\n</script>\n\n<style scoped>\n.container-wrapper {\n  display: flex;\n  flex-direction: column;\n}\n\n.pleaseLoginWrapper {\n  height: 70vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n</style>\n"]}]}